class Solution {
    public int numSquares(int n) {
        Queue<Integer> queue = new LinkedList<>();
        HashSet<Integer> checker = new HashSet<>();

        int steps = 0;
        if (n>0)
            queue.add(n);

        while (!queue.isEmpty()) {
            steps++;
            int tmpSize = queue.size();

            for (int j = 1; j <= tmpSize; j++) {

                int val = queue.poll();
                int squareRoot = (int)Math.sqrt(val);

                for (int i = 1; i <= squareRoot; i++) {
                    if ((val - i*i) == 0) return steps;
                    else if (checker.add(val - i*i)) {
                        queue.add(val - i*i);
                    }
                }
            }
        
        }
        return steps;
    }
}
